2025-06-22T11:52:30.490+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-22T11:52:30.492+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-22T11:52:30.495+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-06-22T11:52:30.544+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-06-22T11:52:30.564+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.filter.RequestLoggingFilter          : Request URL: POST http://localhost:8080/api/auth/login
2025-06-22T11:52:30.564+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.filter.RequestLoggingFilter          : Content-Type: application/json
2025-06-22T11:52:30.565+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.filter.RequestLoggingFilter          : Content-Length: 53
2025-06-22T11:52:30.570+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-06-22T11:52:30.571+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.s.w.session.SessionManagementFilter  : Request requested invalid session id 3707F987AF2E25021EB804BDF1FBE0A9
2025-06-22T11:52:30.576+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-06-22T11:52:30.701+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.controller.AuthController            : Raw login request received: {username=alex, password=password123}
2025-06-22T11:52:30.703+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.controller.AuthController            : Attempting login for user: 'alex'
2025-06-22T11:52:30.721+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.service.AuthService                  : Attempting to authenticate user: 'alex'
2025-06-22T11:52:30.867+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.service.CustomUserDetailsService     : Attempting to load user by username: alex
2025-06-22T11:52:30.887+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.repository.UserRepository            : Searching for user by username: alex
2025-06-22T11:52:31.343+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-22T11:52:31.433+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.repository.UserRepository            : User found by username 'alex': no
2025-06-22T11:52:31.434+02:00  WARN 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.service.CustomUserDetailsService     : User not found with username: alex
2025-06-22T11:52:31.571+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'alex'
2025-06-22T11:52:31.577+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-06-22T11:52:31.578+02:00 ERROR 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.service.AuthService                  : Authentication failed for user 'alex': Bad credentials
2025-06-22T11:52:31.580+02:00 ERROR 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.controller.AuthController            : Login failed for user 'alex': Bad credentials
2025-06-22T11:52:31.667+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.filter.RequestLoggingFilter          : Request payload: {
  "username": "alex",
  "password": "password123"
}
2025-06-22T11:52:42.005+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/register
2025-06-22T11:52:42.007+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-06-22T11:52:42.007+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.s.w.session.SessionManagementFilter  : Request requested invalid session id 3707F987AF2E25021EB804BDF1FBE0A9
2025-06-22T11:52:42.008+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/register
2025-06-22T11:52:42.699+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.service.AuthService                  : Registering new user with username: alex
2025-06-22T11:52:42.701+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.repository.UserRepository            : Checking if user exists with username: alex
2025-06-22T11:52:42.736+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id 
    from
        users u1_0 
    where
        upper(u1_0.username)=upper(?) 
    limit
        ?
2025-06-22T11:52:42.760+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.repository.UserRepository            : User with username 'alex' exists: false
2025-06-22T11:52:43.072+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        users
        (created_at, full_name, password, role, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-22T11:52:43.130+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.service.AuthService                  : Successfully registered user: alex with role: ROLE_ADMIN
2025-06-22T11:52:46.260+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-06-22T11:52:46.261+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.filter.RequestLoggingFilter          : Request URL: POST http://localhost:8080/api/auth/login
2025-06-22T11:52:46.261+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.filter.RequestLoggingFilter          : Content-Type: application/json
2025-06-22T11:52:46.261+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.filter.RequestLoggingFilter          : Content-Length: 53
2025-06-22T11:52:46.262+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-06-22T11:52:46.262+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] o.s.s.w.session.SessionManagementFilter  : Request requested invalid session id 3707F987AF2E25021EB804BDF1FBE0A9
2025-06-22T11:52:46.262+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-06-22T11:52:46.265+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.controller.AuthController            : Raw login request received: {username=alex, password=password123}
2025-06-22T11:52:46.265+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.controller.AuthController            : Attempting login for user: 'alex'
2025-06-22T11:52:46.266+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.service.AuthService                  : Attempting to authenticate user: 'alex'
2025-06-22T11:52:46.266+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.service.CustomUserDetailsService     : Attempting to load user by username: alex
2025-06-22T11:52:46.266+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.repository.UserRepository            : Searching for user by username: alex
2025-06-22T11:52:46.270+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-22T11:52:46.282+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.repository.UserRepository            : User found by username 'alex': yes
2025-06-22T11:52:46.283+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.service.CustomUserDetailsService     : Found user: alex with role: ROLE_ADMIN
2025-06-22T11:52:46.420+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-06-22T11:52:46.421+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.service.AuthService                  : Authentication successful for user: 'alex'
2025-06-22T11:52:46.666+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.service.JwtService                   : Generated token pair for user 'alex'
2025-06-22T11:52:46.666+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.controller.AuthController            : Login successful for user: 'alex'
2025-06-22T11:52:46.672+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-3] app.filter.RequestLoggingFilter          : Request payload: {
  "username": "alex",
  "password": "password123"
}
2025-06-22T11:53:46.963+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-22T11:53:46.974+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-22T11:53:46.983+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-22T11:53:46.985+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] org.hibernate.SQL                        : 
    drop table if exists products
2025-06-22T11:53:46.992+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] org.hibernate.SQL                        : 
    drop table if exists products_seq
2025-06-22T11:53:47.001+02:00 DEBUG 10236 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] org.hibernate.SQL                        : 
    drop table if exists users
2025-06-22T11:53:47.018+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-22T11:53:47.034+02:00  INFO 10236 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-22T11:53:55.805+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] app.Application                          : Starting Application using Java 24.0.1 with PID 15612 (C:\DEV\spring-boot-jwt-auth-refresh\target\classes started by ALEX in C:\DEV\spring-boot-jwt-auth-refresh)
2025-06-22T11:53:55.810+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] app.Application                          : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-22T11:53:55.811+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] app.Application                          : The following 1 profile is active: "dev"
2025-06-22T11:53:58.522+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-22T11:53:58.745+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 178 ms. Found 2 JPA repository interfaces.
2025-06-22T11:54:00.843+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-22T11:54:00.884+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-22T11:54:00.886+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-06-22T11:54:01.021+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-22T11:54:01.022+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 5070 ms
2025-06-22T11:54:01.461+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-22T11:54:01.622+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-06-22T11:54:01.755+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-22T11:54:02.486+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-22T11:54:02.564+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-22T11:54:02.949+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@311a0b3e
2025-06-22T11:54:02.953+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-22T11:54:02.998+02:00  WARN 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-22T11:54:03.000+02:00  WARN 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.orm.deprecation            : HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-22T11:54:03.034+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-22T11:54:04.970+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-22T11:54:05.004+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    drop table if exists products
2025-06-22T11:54:06.007+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    drop table if exists products_seq
2025-06-22T11:54:06.012+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    drop table if exists users
2025-06-22T11:54:06.024+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    create table products (
        price decimal(38,2) not null,
        id bigint not null,
        name varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
2025-06-22T11:54:06.041+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    create table products_seq (
        next_val bigint
    ) engine=InnoDB
2025-06-22T11:54:06.057+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    insert into products_seq values ( 1 )
2025-06-22T11:54:06.064+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    create table users (
        created_at datetime(6),
        id bigint not null auto_increment,
        updated_at datetime(6),
        full_name varchar(50) not null,
        username varchar(50) not null,
        password varchar(255) not null,
        role enum ('ROLE_ADMIN','ROLE_USER') not null,
        primary key (id)
    ) engine=InnoDB
2025-06-22T11:54:06.078+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    alter table users 
       add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2025-06-22T11:54:06.101+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-22T11:54:06.902+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] app.filter.JwtAuthenticationFilter       : Filter 'jwtAuthenticationFilter' configured for use
2025-06-22T11:54:06.903+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] app.filter.RequestLoggingFilter          : Filter 'requestLoggingFilter' configured for use
2025-06-22T11:54:07.062+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-22T11:54:08.033+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestLoggingFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-06-22T11:54:08.764+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-22T11:54:08.780+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [main] app.Application                          : Started Application in 14.192 seconds (process running for 16.125)
2025-06-22T11:54:13.808+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-22T11:54:13.810+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-22T11:54:13.822+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-06-22T11:54:13.884+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-06-22T11:54:13.910+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.filter.RequestLoggingFilter          : Request URL: POST http://localhost:8080/api/auth/login
2025-06-22T11:54:13.911+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.filter.RequestLoggingFilter          : Content-Type: application/json
2025-06-22T11:54:13.913+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.filter.RequestLoggingFilter          : Content-Length: 53
2025-06-22T11:54:13.924+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-06-22T11:54:13.926+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.s.w.session.SessionManagementFilter  : Request requested invalid session id 3707F987AF2E25021EB804BDF1FBE0A9
2025-06-22T11:54:13.931+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-06-22T11:54:14.108+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.controller.AuthController            : Raw login request received: {username=alex, password=password123}
2025-06-22T11:54:14.108+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.controller.AuthController            : Attempting login for user: 'alex'
2025-06-22T11:54:14.108+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.service.AuthService                  : Attempting to authenticate user: 'alex'
2025-06-22T11:54:14.253+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.service.CustomUserDetailsService     : Attempting to load user by username: alex
2025-06-22T11:54:14.264+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.repository.UserRepository            : Searching for user by username: alex
2025-06-22T11:54:14.550+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-22T11:54:14.633+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.repository.UserRepository            : User found by username 'alex': no
2025-06-22T11:54:14.635+02:00  WARN 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.service.CustomUserDetailsService     : User not found with username: alex
2025-06-22T11:54:14.777+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'alex'
2025-06-22T11:54:14.782+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-06-22T11:54:14.784+02:00 ERROR 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.service.AuthService                  : Authentication failed for user 'alex': Bad credentials
2025-06-22T11:54:14.784+02:00 ERROR 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.controller.AuthController            : Login failed for user 'alex': Bad credentials
2025-06-22T11:54:14.867+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-1] app.filter.RequestLoggingFilter          : Request payload: {
  "username": "alex",
  "password": "password123"
}
2025-06-22T11:57:05.181+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-22T11:57:05.240+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-22T11:57:05.441+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-22T11:57:05.444+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] org.hibernate.SQL                        : 
    drop table if exists products
2025-06-22T11:57:05.511+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] org.hibernate.SQL                        : 
    drop table if exists products_seq
2025-06-22T11:57:05.520+02:00 DEBUG 15612 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] org.hibernate.SQL                        : 
    drop table if exists users
2025-06-22T11:57:05.535+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-22T11:57:05.561+02:00  INFO 15612 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-22T11:57:19.865+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] app.Application                          : Starting Application using Java 24.0.1 with PID 6292 (C:\DEV\spring-boot-jwt-auth-refresh\target\classes started by ALEX in C:\DEV\spring-boot-jwt-auth-refresh)
2025-06-22T11:57:19.870+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] app.Application                          : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-22T11:57:19.871+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] app.Application                          : The following 1 profile is active: "dev"
2025-06-22T11:57:21.802+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-22T11:57:21.974+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 143 ms. Found 2 JPA repository interfaces.
2025-06-22T11:57:23.244+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-22T11:57:23.279+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-22T11:57:23.280+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-06-22T11:57:23.453+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-22T11:57:23.455+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3448 ms
2025-06-22T11:57:23.933+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-22T11:57:24.113+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-06-22T11:57:24.243+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-22T11:57:24.952+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-22T11:57:25.022+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-22T11:57:25.408+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5353dd09
2025-06-22T11:57:25.413+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-22T11:57:25.462+02:00  WARN 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-22T11:57:25.464+02:00  WARN 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.orm.deprecation            : HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-22T11:57:25.501+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-22T11:57:27.603+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-22T11:57:27.638+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    drop table if exists products
2025-06-22T11:57:28.657+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    drop table if exists products_seq
2025-06-22T11:57:28.661+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    drop table if exists users
2025-06-22T11:57:28.673+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    create table products (
        price decimal(38,2) not null,
        id bigint not null,
        name varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
2025-06-22T11:57:28.686+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    create table products_seq (
        next_val bigint
    ) engine=InnoDB
2025-06-22T11:57:28.700+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    insert into products_seq values ( 1 )
2025-06-22T11:57:28.706+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    create table users (
        created_at datetime(6),
        id bigint not null auto_increment,
        updated_at datetime(6),
        full_name varchar(50) not null,
        username varchar(50) not null,
        password varchar(255) not null,
        role enum ('ROLE_ADMIN','ROLE_USER') not null,
        primary key (id)
    ) engine=InnoDB
2025-06-22T11:57:28.723+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] org.hibernate.SQL                        : 
    alter table users 
       add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2025-06-22T11:57:28.747+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-22T11:57:29.604+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] app.filter.JwtAuthenticationFilter       : Filter 'jwtAuthenticationFilter' configured for use
2025-06-22T11:57:29.605+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] app.filter.RequestLoggingFilter          : Filter 'requestLoggingFilter' configured for use
2025-06-22T11:57:29.770+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-22T11:57:30.796+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestLoggingFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-06-22T11:57:31.563+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-22T11:57:31.580+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [main] app.Application                          : Started Application in 12.904 seconds (process running for 14.565)
2025-06-22T11:57:57.466+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-22T11:57:57.467+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-22T11:57:57.470+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-06-22T11:57:57.513+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-06-22T11:57:57.533+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.filter.RequestLoggingFilter          : Request URL: POST http://localhost:8080/api/auth/login
2025-06-22T11:57:57.534+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.filter.RequestLoggingFilter          : Content-Type: application/json
2025-06-22T11:57:57.534+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.filter.RequestLoggingFilter          : Content-Length: 53
2025-06-22T11:57:57.540+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-06-22T11:57:57.542+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.s.w.session.SessionManagementFilter  : Request requested invalid session id 3707F987AF2E25021EB804BDF1FBE0A9
2025-06-22T11:57:57.549+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-06-22T11:57:57.715+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.controller.AuthController            : Raw login request received: {username=alex, password=password123}
2025-06-22T11:57:57.717+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.controller.AuthController            : Attempting login for user: 'alex'
2025-06-22T11:57:57.717+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.service.AuthService                  : Attempting to authenticate user: 'alex'
2025-06-22T11:57:57.863+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.service.CustomUserDetailsService     : Attempting to load user by username: alex
2025-06-22T11:57:57.895+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.repository.UserRepository            : Searching for user by username: alex
2025-06-22T11:57:58.245+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-22T11:57:58.399+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.repository.UserRepository            : User found by username 'alex': no
2025-06-22T11:57:58.403+02:00  WARN 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.service.CustomUserDetailsService     : User not found with username: alex
2025-06-22T11:57:58.548+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'alex'
2025-06-22T11:57:58.556+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-06-22T11:57:58.557+02:00 ERROR 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.service.AuthService                  : Authentication failed - invalid credentials for user: alex
2025-06-22T11:57:58.558+02:00 ERROR 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.controller.AuthController            : Login failed - invalid credentials for user: alex
2025-06-22T11:57:58.638+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [http-nio-8080-exec-2] app.filter.RequestLoggingFilter          : Request payload: {
  "username": "alex",
  "password": "password123"
}
2025-06-22T11:59:19.543+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-22T11:59:19.579+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-22T11:59:19.590+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-22T11:59:19.592+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] org.hibernate.SQL                        : 
    drop table if exists products
2025-06-22T11:59:19.609+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] org.hibernate.SQL                        : 
    drop table if exists products_seq
2025-06-22T11:59:19.618+02:00 DEBUG 6292 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] org.hibernate.SQL                        : 
    drop table if exists users
2025-06-22T11:59:19.632+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-22T11:59:19.675+02:00  INFO 6292 --- [spring-boot-jwt-auth-refresh] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
